version: '3'

services:
  web:
    build:
      context: ./nginx
    ports:
      - "80:80"
    networks:
      - backend
    depends_on:
      - grafana
      - keycloak

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: sensor_data
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_AUTH_GENERIC_OAUTH_ENABLED: "true"
      GF_AUTH_GENERIC_OAUTH_NAME: "Keycloak"
      GF_AUTH_GENERIC_OAUTH_CLIENT_ID: "grafana"
      GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET: "your-client-secret"
      GF_AUTH_GENERIC_OAUTH_SCOPES: "openid"
      GF_AUTH_GENERIC_OAUTH_AUTH_URL: "http://nuraiym.test:8080/realms/master/protocol/openid-connect/auth"
      GF_AUTH_GENERIC_OAUTH_TOKEN_URL: "http://nuraiym.test:8080/realms/master/protocol/openid-connect/token"
      GF_AUTH_GENERIC_OAUTH_API_URL: "http://nuraiym.test:8080/realms/master/protocol/openid-connect/userinfo"
      GF_SERVER_ROOT_URL: "http://nuraiym.test:3000"
    depends_on:
      - postgres
      - keycloak
    networks:
      - backend
    ports:
      - "3000:3000"

  python:
    build:
      context: ./python
    container_name: data_generator
    environment:
      DB_HOST: postgres
      DB_NAME: sensor_data
      DB_USER: user
      DB_PASSWORD: password
    depends_on:
      - postgres
    networks:
      - backend

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    environment:
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
      KC_HOSTNAME: "http://nuraiym.test:8080"
    ports:
      - "8080:8080"
    command: start-dev  # Start in dev mode
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
  postgres_data:
